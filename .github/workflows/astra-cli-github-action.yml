name: Astra Cli Sample
on:
  push:
    branches:
      - main
jobs:
  cli-create-db:
    env:
      ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_APPLICATION_TOKEN }}
      ASTRA_DB_NAME: demo
      ASTRA_DB_KEYSPACE: demo
      ASTRA_DB_ID: none
      TERM: linux
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Astra CLI
        run: |
          echo dbid=$(curl --request GET \
          --url 'https://api.astra.datastax.com/v2/databases' \
          --header 'Accept: application/json' \
          --header "Authorization: Bearer ${ASTRA_DB_APPLICATION_TOKEN}" \
          | python -m json.tool \
          | grep -B 4 "\"name\": \"${ASTRA_DB_NAME}\"" \
          | grep "\"id\":" \
          | awk '{ print $2 }' \
          | cut -d '"' -f2)
          curl -Ls "https://dtsx.io/get-astra-cli" | bash

      - name: Create DB
        id: dbcreation
        run: |
          echo $ASTRA_DB_NAME
          /home/runner/.astra/cli/astra db create $ASTRA_DB_NAME -k $ASTRA_DB_KEYSPACE --token $ASTRA_DB_APPLICATION_TOKEN --if-not-exists --wait
          echo "dbid=$(/home/runner/.astra/cli/astra db list --token $ASTRA_DB_APPLICATION_TOKEN | grep $ASTRA_DB_NAME | awk '{ print $4 }')" >> $GITHUB_ENV
          echo "dump=$(curl --request GET \
          --url \"https://api.astra.datastax.com/v2/databases\" \
          --header 'Accept: application/json' \
          --header \"Authorization: Bearer ${ASTRA_DB_APPLICATION_TOKEN}\")" >> $GITHUB_ENV
      - name: Confirm DBID
        run: |
          echo ${{ env.dbid }}
          echo ${{ env.dump }}
      - name: Enable ACL
        run: |
          curl --request PUT \
          --url "https://api.astra.datastax.com/v2/databases/${{ env.dbid }}/access-list" \
          --header 'Accept: application/json' \
          --header "Authorization: Bearer ${ASTRA_DB_APPLICATION_TOKEN}" \
          --data '{ "addresses": [], "configurations": { "accessListEnabled": true } }'
